#массив кортежей (tupple)
#пишутся в круглых скобочках, их нельзя изменять после создания(также ведут себя строки)
#dic[(1,2,3)]=u'питон'кортеж может быть ключом словаря hashable (можно положить в словарь)
#dic[u'my']=25
#split возвращает картежи
#
#def func():
#    return 1,2,3
#print(func())
#>>(1,2,3)
#a,b,c=func
# замена функция sub
# m=re.sub(r'[^;]+',r'',s) первое это рег выр, второе замена, третье -строка для изменения
#[^;]+ это все что не ;, больше ноля
#re.search результат - переменная match
#findall - массив или массив картежей
#sub - cтрока
#m=re.sub(r'\b[Кк]ош?ек', r'собак',s)
#text=...m)
#написать две замены, для больших буква и маленьких
#когда мы экранируем нужен r'\w+' равно '\\w+'
#\b - граница слова
#обратные ссылки
#m=re.sub(r'(\\w+) \\1', r'\\1',s, flags=re.DOTALL)заменияет 2 одинаковых слова на одно этот флаг включает \n его можно вставлять в любые функции модуля re
# флаги изменяют поведение регулярного выражения
#m=re.sub(r'(\\w+)', u'\\1 \\1',s)
#m=re.sub(u'[иео]'.'[иео]')
#[^\w]+=\W
#[\W0-1]
#m=re.sub(r'<.*?>', u'', flags=re.DOTALL)
#\s tab

import re
def open_html(fname):
    with open (fname, 'r', encoding = 'utf-8') as f:
        content=f.read()
    return content

def find_links(content):
    m=re.sub(r'<.*?>',r' ', content)
    s=re.sub(r'\s+', r' ', m)
    d=re.sub(r'Стив Джобс', r'Феечка Винкс',s)
    return d
text=open_html('steve.html')
a=find_links(text)
print(a)

def syllable ():
    m=re.sub(r'[бвгджзклмнпрстфхцчшй][оаеи][]',)






